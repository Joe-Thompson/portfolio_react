[{"C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\index.js":"1","C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\App.js":"2","C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\reportWebVitals.js":"3","C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\components\\Landing.js":"4","C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\components\\Nav.js":"5","C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\components\\ContactForm.js":"6","C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\utils\\axios.js":"7","C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\utils\\AppRouting.js":"8","C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\components\\Projects.js":"9","C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\utils\\darkmode.js":"10","C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\utils\\localstorage.js":"11"},{"size":591,"mtime":1608076732564,"results":"12","hashOfConfig":"13"},{"size":328,"mtime":1608250453069,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":4172,"mtime":1608598678908,"results":"16","hashOfConfig":"13"},{"size":954,"mtime":1608563323492,"results":"17","hashOfConfig":"13"},{"size":2690,"mtime":1608072800565,"results":"18","hashOfConfig":"13"},{"size":351,"mtime":1607998820272,"results":"19","hashOfConfig":"13"},{"size":418,"mtime":1608077060855,"results":"20","hashOfConfig":"13"},{"size":18501,"mtime":1608563267861,"results":"21","hashOfConfig":"13"},{"size":460,"mtime":1608249967845,"results":"22","hashOfConfig":"13"},{"size":455,"mtime":1608249794897,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1xc3fgu",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\index.js",[],["49","50"],"C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\App.js",["51"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/index.css';\nimport Nav from \"./components/Nav\";\nimport AppRouting from './utils/AppRouting';\nimport Landing from './components/Landing';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Nav />\n        <Landing />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\reportWebVitals.js",[],"C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\components\\Landing.js",[],"C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\components\\Nav.js",[],"C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\components\\ContactForm.js",[],"C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\utils\\axios.js",[],"C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\utils\\AppRouting.js",[],"C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\components\\Projects.js",["52"],"import React from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport niyon_login from '../images/niyon_login.png';\r\nimport niyon_dashboard from '../images/niyon_dashboard.png';\r\nimport niyon_search from '../images/niyon_search.png';\r\nimport niyon_profile from '../images/niyon_profile.png';\r\nimport niyon_room from '../images/niyon_room.png';\r\nimport niyon_chat from '../images/niyon_chat.png';\r\nimport dev_comment from '../images/dev_comment.png';\r\nimport dev_create from '../images/dev_create.png';\r\nimport dev_dashboard from '../images/dev_dashboard.png';\r\nimport dev_edit from '../images/dev_edit.png';\r\nimport dev_login from '../images/dev_login.png';\r\nimport dev_replys from '../images/dev_replys.png';\r\nimport dev_search from '../images/dev_search.png';\r\nimport tar_login from '../images/tar_login.png';\r\nimport tar_register from '../images/tar_register.png';\r\nimport tar_landing from '../images/tar_landing.png';\r\nimport tar_ham from '../images/tar_ham_nav.png';\r\nimport tar_footer from '../images/tar_footer.png';\r\nimport tar_cards from '../images/tar_cards.png';\r\nimport tar_card from '../images/tar_card.png';\r\nimport tar_note from '../images/tar_note.png';\r\n\r\n\r\nfunction Projects() {\r\n\r\n    let niyon_link = 'https://master.d3p8i1bf0wxm1z.amplifyapp.com/';\r\n    return (\r\n        <div id=\"projects\" className='carousel_container'>\r\n            <h1>Projects</h1>\r\n\r\n            <Carousel>\r\n                <Carousel.Item interval={2000}>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={niyon_login}\r\n                        alt=\"First slide\"\r\n                    />\r\n                    <br />\r\n                    <Carousel.Caption>\r\n                        <p>Login component for new and existing users.</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item interval={2000}>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={niyon_dashboard}\r\n                        alt=\"Third slide\"\r\n                    />\r\n                    <br />\r\n                    <Carousel.Caption>\r\n                        <p>User dashboard, shows current connections and requests.  Also has a google\r\n                        map to show where your connections are located.</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item interval={2000}>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={niyon_profile}\r\n                        alt=\"Third slide\"\r\n                    />\r\n                    <br />\r\n                    <Carousel.Caption>\r\n                        <p>Component for user to update their profile section.  The values here\r\n                        are what other users will search by. </p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item interval={2000}>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={niyon_search}\r\n                        alt=\"First slide\"\r\n                    />\r\n                    <br />\r\n                    <Carousel.Caption>\r\n                        <p>Mentors and mentees have the ability to search by job title, location,\r\n                        or technology stack to send a request to connect to other users.</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item interval={2000}>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={niyon_room}\r\n                        alt=\"First slide\"\r\n                    />\r\n                    <br />\r\n                    <Carousel.Caption>\r\n                        <p>Users have the ability to join rooms based on a list of languages, frameworks, or\r\n                        soft-skills such as interviewing. </p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item interval={2000}>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={niyon_chat}\r\n                        alt=\"First slide\"\r\n                    />\r\n                    <br />\r\n                    <Carousel.Caption>\r\n                        <p>Chat rooms are a great way to have lively discussion.</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n            <div className='project_about'>\r\n            <h2>Niyon</h2>\r\n            <h5>\r\n                Niyon is an online platform that aims to connect young coders with mentors.\r\n                Starting a job in a new location or new industry is extremely difficult.\r\n                Niyon helps young professionals increase their confidence, skills, and to meet colleagues\r\n                in a new location and find support to help them develop the skills needed for their\r\n                coding career. Niyon will be launching a pilot of its mentorship platform in West\r\n                Africa and aims to reduce the unemployment rate in those countries. Niyon was a\r\n                greenfield project and I severed as a backend developer. Using Node.js with express\r\n                myself and Tim Mitzen created a Rest API and used PostgreSQL as our database.\r\n            </h5>\r\n            <br />\r\n            <h5>\r\n                Niyon was the capstone project for Lambda school, where I earned a certificate as\r\n                a full stack developer.  My main responsibility as a backend developer on this project\r\n                was to create a REST API that would perform CRUD operations for our users.  Routes that I\r\n                created included a sign up, login flow, creating and updating profiles, and routes to handle\r\n                our user's ability to connect with one another.  Another component on our frontend was a news feed\r\n                from dev.to.  By using dev.to's API we were able to create news feed, searchable by technology.\r\n                Testing for our backend repo was handled by jest and graded by code climate with a maintainability\r\n                score of A.  One of the main features of Niyon is the ability of join chat rooms based on what\r\n                technology you are interested in.  For our chat functionality we used Python-Flask, with\r\n                Flask-Socket.io.\r\n            </h5>\r\n                <div className='project_links'>\r\n                <a href='https://master.d3p8i1bf0wxm1z.amplifyapp.com/'>Deployed Site</a>\r\n                <a href='https://github.com/Lambda-School-Labs/niyon-be'>Backend Repo</a>\r\n                <a href='https://github.com/Lambda-School-Labs/niyon-be-chat'>Chat Repo</a>\r\n                </div>\r\n\r\n                <br />\r\n\r\n                <Carousel>\r\n                    <Carousel.Item interval={2000}>\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src={dev_login}\r\n                            alt=\"First slide\"\r\n                        />\r\n                        <br />\r\n                        <Carousel.Caption>\r\n                            <p>Login component for new and existing users.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item interval={2000}>\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src={dev_dashboard}\r\n                            alt=\"First slide\"\r\n                        />\r\n                        <br />\r\n                        <Carousel.Caption>\r\n                            <p>User dashboard, can easily view tickets and their status.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item interval={2000}>\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src={dev_create}\r\n                            alt=\"First slide\"\r\n                        />\r\n                        <br />\r\n                        <Carousel.Caption>\r\n                            <p>Form for users to create tickets.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item interval={2000}>\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src={dev_edit}\r\n                            alt=\"First slide\"\r\n                        />\r\n                        <br />\r\n                        <Carousel.Caption>\r\n                            <p>User's have the ability to update their tickets with new things\r\n                                they may have tried or a solution, they can also change the status\r\n                                of their ticket.\r\n                            </p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item interval={2000}>\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src={dev_search}\r\n                            alt=\"Third slide\"\r\n                        />\r\n                        <br />\r\n                        <Carousel.Caption>\r\n                            <p>User's can search by category for open tickets to help resolve.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item interval={2000}>\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src={dev_comment}\r\n                            alt=\"Third slide\"\r\n                        />\r\n                        <br />\r\n                        <Carousel.Caption>\r\n                            <p>User's can leave comments on other user's tickets.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item interval={2000}>\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src={dev_replys}\r\n                            alt=\"First slide\"\r\n                        />\r\n                        <br />\r\n                    </Carousel.Item>\r\n                </Carousel>\r\n                <div className='project_about'>\r\n                    <h2>Dev Desk: Your path to perfect code harmony</h2>\r\n                    <h5>\r\n                        The concept for Dev Desk came from Lambda School's build week projects,\r\n                        unfortunately our build week projects were chosen randomly and I never had\r\n                        the opportunity to be selected for the dev desk team.  However, during my internship\r\n                        at Lambda School as a Team Lead, between holding one on one sessions with my students,\r\n                        reviewing their project code and hosting after hours I spend my time building my own\r\n                        version of Dev Desk from back to front.\r\n                    </h5>\r\n                    <br />\r\n                    <h5>\r\n                        The backend is a node.js server with express framework.  I used knex.js to interact\r\n                        with my PostgreSQL database, and for authorization I decided on JSON web tokens.  The\r\n                        frontend is a react app with redux as my state management, and Less as my preprocessor.\r\n                        Dev Desk at it's core is a stack overflow clone with user's ability to create tickets\r\n                        for other users to comment on and help resolve.\r\n                    </h5>\r\n                    <div className='project_links'>\r\n                        <a href='https://devs-desk.netlify.app/'>Deployed Site</a>\r\n                        <a href='https://github.com/DevDeskQ/Front-End'>Frontend Repo</a>\r\n                        <a href='https://github.com/DevDeskQ/rebuilt-node'>Backend Repo</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br />\r\n                <Carousel>\r\n                    <Carousel.Item interval={2000}>\r\n                        <div className='tarot_img'>\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src={tar_login}\r\n                            alt=\"First slide\"\r\n                        />\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src={tar_register}\r\n                            alt=\"First slide\"\r\n                        />\r\n                        </div>\r\n                        <br />\r\n                        <Carousel.Caption>\r\n                            <p id='tarot_p_background' className='tarot_p'>Login component for existing users and a route to\r\n                            our registration component for new users.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item interval={2000}>\r\n                        <div className='tarot_img'>\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src={tar_landing}\r\n                                alt=\"First slide\"\r\n                            />\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src={tar_ham}\r\n                                alt=\"First slide\"\r\n                            />\r\n                        </div>\r\n                        <br />\r\n                        <Carousel.Caption>\r\n                            <p id='tarot_p_background' className='tarot_p'>The landing component has a brief introduction to\r\n                            watch tarot cards are and how to read them.  Hidden hamburger\r\n                            menu for easy navigation on mobile.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item interval={2000}>\r\n                        <div className='tarot_img'>\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src={tar_footer}\r\n                                alt=\"First slide\"\r\n                            />\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src={tar_cards}\r\n                                alt=\"First slide\"\r\n                            />\r\n                        </div>\r\n                        <br />\r\n                        <Carousel.Caption>\r\n                            <p id='tarot_p_background' className='tarot_p'>A footer navigation menu is present on the landing page for\r\n                                the user to easily jump in.  Every category has all cards\r\n                            listed with their quote.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item interval={2000}>\r\n                        <div className='tarot_img'>\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src={tar_card}\r\n                                alt=\"First slide\"\r\n                            />\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src={tar_note}\r\n                                alt=\"First slide\"\r\n                            />\r\n                        </div>\r\n                        <br />\r\n                        <Carousel.Caption>\r\n                            <p id='tarot_p_background' className='tarot_p'>Selecting a card gives the user an in depth summary of the card\r\n                            and how to read the card in each position.  Every card also has a thread\r\n                            for users to post their own interruption of the card. </p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                </Carousel>\r\n                <div className='project_about'>\r\n                    <h2>The Tarot Reader: Rider Waite edition</h2>\r\n                    <h5>\r\n                        The Tarot Reader app was a personal project I did for my wife and her friends.  My aim was to\r\n                        create a platform that users could not only educate themselves on tarot reading but to also\r\n                        allow them to share their own thoughts behind what the cards really mean.  All cards have their\r\n                        recommended meaning based on position, but also have a thread for users to share their own thoughts.\r\n                        The next step in the development cycle for The Tarot Reader is to implement a profile section\r\n                        for users and to look into push notifications for a mention in the thread.\r\n                    </h5>\r\n                    <br />\r\n                    <h5>\r\n                        The Tarot Reader is a mobile only app created with React.  I choose to use redux as my\r\n                        state management system, basic CSS3 for styling, and react router to handle my urls.  The\r\n                        server is built in Node.js with the Express framework and a PostgreSQL database.  I use the\r\n                        query builder Knex.js to interact with the database and return data to route handlers.  For\r\n                        authentication I used JSON web tokens to interact with the front end, and for user password\r\n                        protection I chose to use salting as the method to encrypt passwords.\r\n                    </h5>\r\n                    <div className='project_links'>\r\n                        <a href='https://rider-waite-tarot.netlify.app/'>Deployed Site</a>\r\n                        <a href='https://github.com/Tawne-Tarot-Cards/Front-End'>Frontend Repo</a>\r\n                        <a href='https://github.com/Tawne-Tarot-Cards/Back-End'>Backend Repo</a>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects;","C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\utils\\darkmode.js",[],"C:\\Users\\Joe\\Documents\\Projects\\portfolio_react\\portfolio\\src\\utils\\localstorage.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":18},{"ruleId":"57","severity":1,"message":"61","line":28,"column":9,"nodeType":"59","messageId":"60","endLine":28,"endColumn":19},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'AppRouting' is defined but never used.","Identifier","unusedVar","'niyon_link' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]